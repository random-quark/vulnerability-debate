#define USE_ARDUINO_INTERRUPTS true    // Set-up low-level interrupts for most acurate BPM math.
#include <PulseSensorPlayground.h>     // Includes the PulseSensorPlayground Library.   
const int PulseWire = 0;       // PulseSensor PURPLE WIRE connected to ANALOG PIN 0
int Threshold = 550;

PulseSensorPlayground pulseSensor;

const int ALCOHOL_PIN = A0;
const int GSR_PIN = A1;
const int HEARTBEAT_PIN = A2;

void setup() {
  Serial.begin(9600);

  pinMode(2, OUTPUT);
  digitalWrite(2, HIGH);

  pulseSensor.analogInput(A0);   
  pulseSensor.setThreshold(100);   
}

void readAlcohol() {
  float sensorValue = analogRead(ALCOHOL_PIN);
  float sensor_volt = sensorValue/1024*5.0;
  String message = "alcohol:" + String(sensor_volt);
  Serial.println(message);
}

void readGsr() {
  float sensorValue = analogRead(GSR_PIN);
  String message = "gsr:" + String(sensorValue);
  Serial.println(message);
}

void readHeartbeat() {
  int bpm = pulseSensor.getBeatsPerMinute();
  String message = "heartbeat:" + String(bpm);
  Serial.println(message);
}
 
void loop() {
  readAlcohol();
  readGsr();
//  readHeartbeat();
  delay(1000);
}
